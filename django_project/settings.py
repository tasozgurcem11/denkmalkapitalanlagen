"""
Django settings for django_project project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from email.mime.text import MIMEText

from google.oauth2 import service_account

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR, "templates")
STATIC_DIR = os.path.join(BASE_DIR, "static")
MEDIA_DIR = os.path.join(BASE_DIR, "media")

# Continuous integration testing (Uses local db if true)
CI_TESTING = False
# Google Cloud Credentials key
# You can obtain a JSON key under IAM & Admin -> Service Accounts -> Keys
GS_KEY_FILENAME = "kapitalkey.json"
GS_KEY_JSON = os.path.join(BASE_DIR, GS_KEY_FILENAME)
if not os.path.isfile(GS_KEY_JSON):
    print("Unable to locate google cloud private key!\nProject will only work on local.")
    CI_TESTING = True

try:
    f = open(os.path.join(BASE_DIR, "ext_settings.json"))
except FileNotFoundError:
    print("Unable to locate external settings file!\nPlease create the \"ext_settings.json\" file!")
    raise FileNotFoundError
else:
    EXT_SETTINGS_JSON = json.load(f)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Update the secret key to a value of your own before deploying the app.
# python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY = EXT_SETTINGS_JSON["secret_key"]

# SECURITY WARNING: App Engine's security features ensure that it is safe to
# have ALLOWED_HOSTS = ['*'] when the app is deployed. If you deploy a Django
# app not on App Engine, make sure to set an appropriate host here.
# See https://docs.djangoproject.com/en/2.1/ref/settings/
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'webp_converter',
    'django_summernote',
    'blog',
    'scheduler',
    'phonenumber_field',
    'denkmalgeschutztelofts',
    'django.contrib.sites',
    'django.contrib.sitemaps',
]
SITE_ID = 1
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR, ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'webp_converter.context_processors.webp_support',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# Install PyMySQL as mysqlclient/MySQLdb to use Django's mysqlclient adapter
# See https://docs.djangoproject.com/en/2.1/ref/databases/#mysql-db-api-drivers
# for more information
import pymysql  # noqa: 402

pymysql.version_info = (1, 4, 6, 'final', 0)  # change mysqlclient version
pymysql.install_as_MySQLdb()

# [START db_setup]
if os.getenv('GAE_APPLICATION', None):
    # Running on production App Engine, so connect to Google Cloud SQL using
    # the unix socket at /cloudsql/<your-cloudsql-connection string>
    DEBUG = False
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 3600
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '/cloudsql/{}'.format(EXT_SETTINGS_JSON["database"]["host"]),
            'USER': EXT_SETTINGS_JSON["database"]["user"],
            'PASSWORD': EXT_SETTINGS_JSON["database"]["password"],
            'NAME': EXT_SETTINGS_JSON["database"]["name"],
        }
    }
    DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
    GS_BUCKET_NAME = '{}.appspot.com'.format(EXT_SETTINGS_JSON["bucket_name"])
    # Make sure to get a JSON key under IAM & Admin -> Service Accounts -> Keys
    GS_CREDENTIALS = service_account.Credentials.from_service_account_file(GS_KEY_JSON)
# Use a in-memory sqlite3 database when testing in CI systems
elif CI_TESTING:
    DEBUG = True
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    SECURE_HSTS_SECONDS = 0
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3')
        }
    }
else:
    # Running locally so connect to either a local MySQL instance or connect to
    # Cloud SQL via the proxy. To start the proxy via command line:
    #
    #     $ cloud_sql_proxy -instances=[INSTANCE_CONNECTION_NAME]=tcp:3306
    #
    # See https://cloud.google.com/sql/docs/mysql-connect-proxy
    DEBUG = True
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    SECURE_HSTS_SECONDS = 0
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '127.0.0.1',
            'PORT': '3306',
            'USER': EXT_SETTINGS_JSON["database"]["user"],
            'PASSWORD': EXT_SETTINGS_JSON["database"]["password"],
            'NAME': EXT_SETTINGS_JSON["database"]["name"],
        }
    }
# [END db_setup]

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        # noqa: 501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # noqa: 501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # noqa: 501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # noqa: 501
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'de'

TIME_ZONE = 'Europe/Berlin'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_ROOT = 'static'
STATIC_URL = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = MEDIA_DIR

EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_HOST_USER = 'info@denkmalkapitalanlagen.de'
EMAIL_HOST_PASSWORD = 'denkmal123kapital'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

if "jazzmin" in INSTALLED_APPS:
    # Jazzmin Admin Panel settings
    JAZZMIN_SETTINGS = {
        # title of the window
        "site_title": "Kapitalanlagen",
        # Title on the brand, and the login screen (19 chars max)
        "site_header": "Kapitalanlagen",
        # square logo to use for your site, must be present in static files, used for favicon and brand on top left
        "site_logo": "denkmalgeschutztelofts/images/kapital-anlage-icon.png",
        # Welcome text on the login screen
        # "welcome_sign": "Welcome to the library",
        # Copyright on the footer
        "copyright": "Denkmal Kapitalanlagen",
        # The model admin to search from the search bar, search bar omitted if excluded
        "search_model": "auth.User",
        # Field name on user model that contains avatar image
        "user_avatar": None,

        ############
        # Top Menu #
        ############
        # Links to put along the top menu
        "topmenu_links": [
            # Url that gets reversed (Permissions can be added)
            {"name": "Startseite", "url": "admin:index", "permissions": ["auth.view_user"]},
            # external url that opens in a new window (Permissions can be added)
            # {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues",
            #  "new_window": True},
            # model admin to link to (Permissions checked against model)
            {"model": "auth.User"},
            # App with dropdown menu to all its models pages (Permissions checked against models)
            # {"app": "books"},
        ],

        #############
        # User Menu #
        #############
        # Additional links to include in the user menu on the top right ("app" url type is not allowed)
        # "usermenu_links": [
        #     {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues",
        #      "new_window": True},
        #     {"model": "auth.user"}
        # ],

        #############
        # Side Menu #
        #############
        # Whether to display the side menu
        "show_sidebar": True,
        # Whether to aut expand the menu
        "navigation_expanded": True,
        # Hide these apps when generating side menu e.g (auth)
        "hide_apps": [],
        # Hide these models when generating side menu (e.g auth.user)
        "hide_models": [],
        # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
        # "order_with_respect_to": ["auth", "books", "books.author", "books.book"],
        # Custom links to append to app groups, keyed on app name
        # "custom_links": {
        #     "books": [{
        #         "name": "Make Messages",
        #         "url": "make_messages",
        #         "icon": "fas fa-comments",
        #         "permissions": ["books.view_book"]
        #     }]
        # },
        # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free
        # for a list of icon classes
        "icons": {
            "auth": "fas fa-users-cog",
            "auth.user": "fas fa-user",
            "auth.Group": "fas fa-users",
        },
        # Icons that are used when one is not manually specified
        "default_icon_parents": "fas fa-chevron-circle-right",
        "default_icon_children": "fas fa-circle",

        #################
        # Related Modal #
        #################
        # Use modals instead of popups
        "related_modal_active": True,

        #############
        # UI Tweaks #
        #############
        # Relative paths to custom CSS/JS scripts (must be present in static files)
        "custom_css": "denkmalgeschutztelofts/css/jazzmin_theme.css",
        "custom_js": None,
        # Whether to show the UI customizer on the sidebar
        "show_ui_builder": False,

        ###############
        # Change view #
        ###############
        # Render out the change view as a single form, or in tabs, current options are
        # - single
        # - horizontal_tabs (default)
        # - vertical_tabs
        # - collapsible
        # - carousel
        "changeform_format": "horizontal_tabs",
        # override change forms on a per modeladmin basis
        "changeform_format_overrides": {"auth.user": "collapsible",
                                        "auth.group": "vertical_tabs", },
        # Add a language dropdown into the admin
        "language_chooser": False,
    }

    JAZZMIN_UI_TWEAKS = {
        "navbar_small_text": False,
        "footer_small_text": True,
        "body_small_text": False,
        "brand_small_text": False,
        "brand_colour": "navbar-dark",
        "accent": "accent-navy",
        "navbar": "navbar-dark",
        "no_navbar_border": False,
        "sidebar": "sidebar-dark-warning",
        "sidebar_nav_small_text": False,
        "sidebar_disable_expand": False,
        "sidebar_nav_child_indent": True,
        "sidebar_nav_compact_style": True,
        "sidebar_nav_legacy_style": False,
        "sidebar_nav_flat_style": True
    }

if "webp_converter" in INSTALLED_APPS:
    # WEBP Converter settings
    WEBP = "webp"

if "django_summernote" in INSTALLED_APPS:
    # Summernote Settings
    X_FRAME_OPTIONS = "SAMEORIGIN"
    SUMMERNOTE_THEME = "bs4"
    SUMMERNOTE_CONFIG = {
        "summernote": {
            "width": "100%",
            "height": "480",
        },
        "js": (
            "static/summernote/plugins/summernote-image-attributes.js",
            "static/summernote/plugins/lang/en-us.js",
        ),
    }

if "phonenumber_field" in INSTALLED_APPS:
    # Phone Number Field settings
    PHONENUMBER_DB_FORMAT = "NATIONAL"
    PHONENUMBER_DEFAULT_REGIONS = "DE"
